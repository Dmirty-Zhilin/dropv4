# Build stage
FROM node:18 AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY frontend/package.json ./

# Generate pnpm-lock.yaml if missing (add this command)
RUN npm install -g pnpm && pnpm install --lockfile-only  # Создает или обновляет pnpm-lock.yaml

# Install dependencies (using the lock file)
RUN pnpm install

# Copy source code
COPY frontend/ .

# Build the application
RUN pnpm run build

# Production stage
FROM nginx:alpine

# Copy built files from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Command to run Nginx
CMD ["nginx", "-g", "daemon off;"]
